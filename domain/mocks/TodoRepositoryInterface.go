// Code generated by mockery v2.18.0. DO NOT EDIT.

package mocks

import (
	domain "todo-clean/domain"

	gorm "gorm.io/gorm"

	mock "github.com/stretchr/testify/mock"
)

// TodoRepositoryInterface is an autogenerated mock type for the TodoRepositoryInterface type
type TodoRepositoryInterface struct {
	mock.Mock
}

// CreateTodoRepository provides a mock function with given fields: db, todo
func (_m *TodoRepositoryInterface) CreateTodoRepository(db *gorm.DB, todo domain.CreateTodoEntity) (*domain.CreateTodoEntity, error) {
	ret := _m.Called(db, todo)

	var r0 *domain.CreateTodoEntity
	if rf, ok := ret.Get(0).(func(*gorm.DB, domain.CreateTodoEntity) *domain.CreateTodoEntity); ok {
		r0 = rf(db, todo)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.CreateTodoEntity)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*gorm.DB, domain.CreateTodoEntity) error); ok {
		r1 = rf(db, todo)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewTodoRepositoryInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewTodoRepositoryInterface creates a new instance of TodoRepositoryInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTodoRepositoryInterface(t mockConstructorTestingTNewTodoRepositoryInterface) *TodoRepositoryInterface {
	mock := &TodoRepositoryInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

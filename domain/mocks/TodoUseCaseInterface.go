// Code generated by mockery v2.18.0. DO NOT EDIT.

package mocks

import (
	context "context"
	domain "todo-clean/domain"

	mock "github.com/stretchr/testify/mock"
)

// TodoUseCaseInterface is an autogenerated mock type for the TodoUseCaseInterface type
type TodoUseCaseInterface struct {
	mock.Mock
}

// CreateTodoUseCase provides a mock function with given fields: ctx, todo
func (_m *TodoUseCaseInterface) CreateTodoUseCase(ctx context.Context, todo domain.CreateTodoEntityRequest) (*domain.CreateTodoEntity, error) {
	ret := _m.Called(ctx, todo)

	var r0 *domain.CreateTodoEntity
	if rf, ok := ret.Get(0).(func(context.Context, domain.CreateTodoEntityRequest) *domain.CreateTodoEntity); ok {
		r0 = rf(ctx, todo)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.CreateTodoEntity)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, domain.CreateTodoEntityRequest) error); ok {
		r1 = rf(ctx, todo)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewTodoUseCaseInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewTodoUseCaseInterface creates a new instance of TodoUseCaseInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTodoUseCaseInterface(t mockConstructorTestingTNewTodoUseCaseInterface) *TodoUseCaseInterface {
	mock := &TodoUseCaseInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
